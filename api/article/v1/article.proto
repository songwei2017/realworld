syntax = "proto3";

package article.v1;
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
option go_package = "realworld/api/article/v1;v1";

service Article {


  rpc ListArticles(ListArticlesRequest) returns (MultipleArticlesReply) {
    option (google.api.http) = {
      get : "/api/articles",
    };
  }

  rpc FeedArticles(FeedArticlesRequest) returns (MultipleArticlesReply) {
    option (google.api.http) = {
      get : "/api/articles/feed",
    };
  }

  rpc GetArticle(GetArticleRequest) returns (SingleArticleReply) {
    option (google.api.http) = {
      get : "/api/articles/{slug}",
    };
  }

  rpc CreateArticle(CreateArticleRequest) returns (SingleArticleReply) {
    option (google.api.http) = {
      post : "/api/articles",
      body : "*",
    };
  }

  rpc UpdateArticle(UpdateArticleRequest) returns (SingleArticleReply) {
    option (google.api.http) = {
      put : "/api/articles/{slug}",
      body : "*",
    };
  }

  rpc DeleteArticle(DeleteArticleRequest) returns (SingleArticleReply) {
    option (google.api.http) = {
      delete : "/api/articles/{slug}",
    };
  }

  rpc AddComment(AddCommentRequest) returns (SingleCommentReply) {
    option (google.api.http) = {
      post : "/api/articles/{slug}/comments",
      body : "*",
    };
  }

  rpc GetComments(AddCommentRequest) returns (MultipleCommentsReply) {
    option (google.api.http) = {
      get : "/api/articles/{slug}/comments",
    };
  }

  rpc DeleteComment(DeleteCommentRequest) returns (SingleCommentReply) {
    option (google.api.http) = {
      delete : "/api/articles/{slug}/comments/{id}",
    };
  }

  rpc FavoriteArticle(FavoriteArticleRequest) returns (SingleArticleReply) {
    option (google.api.http) = {
      post : "/api/articles/{slug}/favorite",
      body :"*"
    };
  }

  rpc UnfavoriteArticle(UnfavoriteArticleRequest) returns (SingleArticleReply) {
    option (google.api.http) = {
      delete : "/api/articles/{slug}/favorite",
    };
  }

  rpc GetTags(GetTagsRequest) returns (TagListReply) {
    option (google.api.http) = {
      get : "/api/tags",
    };
  }

}


message GetTagsRequest {}

message FavoriteArticleRequest {string slug = 1;}

message UnfavoriteArticleRequest {string slug = 1;}

message DeleteCommentRequest {
  string slug = 1;
  int64 id = 2;
}

message AddCommentRequest {
  message Comment {string body = 1;}

  Comment comment = 1;
  string slug = 2;
}

message DeleteArticleRequest {string slug = 1;}

message UpdateArticleRequest {
  message Article {
    string title = 1;
    string description = 2;
    string body = 3;
    repeated string tagList = 4;
  }
  Article article = 1;
  string slug = 2;
}

message CreateArticleRequest {
  message Article {
    string title = 1;
    string description = 2;
    string body = 3;
    repeated string tagList = 4;
  }
  Article article = 1;
}

message GetArticleRequest {string slug = 1;}

message FeedArticlesRequest {
  int64 limit = 1;
  int64 offset = 2;
}

message ListArticlesRequest {
  string tag = 1;
  string author = 2;
  string favorited = 3;
  int64 limit = 4;
  int64 offset = 5;
}


message SingleArticleReply {Articles article = 1;}

message MultipleArticlesReply {
  repeated Articles articles = 1;
  uint64 articlesCount = 2;
}

message SingleCommentReply {Comment comment = 1;}

message MultipleCommentsReply {repeated Comment comments = 1;}

message TagListReply {repeated string tags = 1;}




message Articles {
  string slug = 1;
  string title = 2;
  string description = 3;
  string body = 4;
  repeated string tagList = 5;
  google.protobuf.Timestamp createdAt = 6;
  google.protobuf.Timestamp updatedAt = 7;
  bool favorited = 8;
  uint32 favoritesCount = 9;
  Profile author = 10;
}

message Profile {
  string username = 1;
  string bio = 2;
  string image = 3;
  bool following = 4;
}

message Comment {
  uint32 id = 1;
  google.protobuf.Timestamp createdAt = 2;
  google.protobuf.Timestamp updatedAt = 3;
  string body = 4;
  Profile author = 5;
}